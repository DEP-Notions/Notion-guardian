classes in CSS with html

html
<div class = "topdiv">
  <h1>Lucky's Page of Interests</h1>
  <p class="subtitle"><b>Are you a person who intereset to read 
	about <em>Lucky's interests?</em></b><br>Refer this page. 	
	You can achieve it.
  </p>
</div>

CSS
.topdiv{
  /*styling the top header of the page*/
  border-top-style:solid;
  border-bottom-style:solid;
  border-color:Crimson;
  border-width:2px;
  padding-left:5px;
  font-family: "Courier New", Courier, monospace;
  text-align: center;
}
//////////////////////////////////////////////////////////////////
indexes in CSS with html

html
<div class="boxdiv">
  <h3>Sport</h3>
  <p><b>Swimming</b>
  <img src = "https://cdn.pixabay.com/photo/2013/02/09/04/23
	/swimmers-79592_960_720.jpg" id="allImg"/></p>
</div>

CSS
#allImg{
  width: 30em;
  border: solid;
  border-width: 1px;
  border-color: GhostWhite;
}
/////////////////////////////////////////////////////////////////////


====================================================================
Buttons with Divs
====================================================================

html button
<input type = "button" value="change"
onclick = "alert('clicked button')">
-------------------------------------------------------------------
put alert to a javascript function

html
<input type = "button" value="change"
onclick = "dochange()">

javaScript
function dochange(){
	alert('clicked button with JS function')
}

/////////////////////////////////////////////////////////////////////
function - confirm

<html>
<body>

<p>Click the button to display a confirm box.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

</body>
</html>


<script>
function myFunction() {
  var txt;
  var r = confirm("Press a button!");
  if (r == true) {
    txt = "You pressed OK!";
  } else {
    txt = "You pressed Cancel!";
  }
  document.getElementById("demo").innerHTML = txt;
}
</script>

--------------------------------------------------------------------
function myFunction(){
	var choice = confirm("Press a button!");
	if ( choice == true){
		txt = "You pressed OK!"
	}else{
		txt = "Are you sure you want to cancel?"
	}
}

====================================================================
Changing Pages Interactively
====================================================================
changing buttons color

html----------
<div id="d1">
	Hello
</div>
<div id="d2">
	Goodbye
</div>
<p>
   <inpt type="button" value="color change" onclick="changecolor()">
</p>

CSS----------
.yellowback{
	background-color: yellow;
}

.blueback{
	background-color: lightblue;
}

JS-----------
function changecolor(){
	var dd1 = document.getElementById("d1"); //getting HTML Elements
	var dd2 = document.getElementById("d2");

	dd1.className = "blueback";	//setting the CSS class
	dd2.className = "yellowback";
}

//////////////////////////////////////////////////////////////////////
Changing HTML Text

JS---------
function changetext(){
	var dd1 = document.getElementById("d1"); 
	var dd2 = document.getElementById("d2");

	dd1.innerHTML = "Bonjour";  //change color  	
	dd2.innerHTML = "Sayonara";
}
=====================================================================
Using Canvas instead of divs
=====================================================================
yellow rectangle by using canvas

html-----------------
<h1>Using a Canvas</h1>

<canvas id="d1">
</canvas>

<p>
<input type="button" value="make lime" onclick="doline()">

<inpt type="button" value="make yellow" onclick="doyellow()">
</P>

CSS-------------------
canvas{
	width: 200px;
	height: 100px;
	border: 1px solid #c3c3c3;
}

JS--------------------
function dolime(){
	var dd1 = document.getElementById("d1");
	dd1.style.backgroundColor="lime";
}
function doyellow(){
	var dd1 = document.getElementById("d1");
	dd1.style.backgroundColor="White";

	//yellow rectangle
	var ctx = dd1.getContext("2d"); //access context of the canvas with 2d graphics
	ctx.fillStyle="yellow";
	ctx.fillRect(10,10,100,100);
	ctx.fillRect(60,10,40,40);

	//making text
	ctx.fillStyle = "black";
	ctx.font = "30px Arial"; 	//font size and font
	ctx.fillText("Hello", 10, 80);	//text and location
}
=====================================================================
Inputs and Events
=====================================================================
Color Picker

html-------------
<input type="color" value="#001A57"
   id="clr"  onchange="docolor()">

JS---------------
function docolor(){
	var dd1 = document.getElementById("d1");	//get the canvas element
	var colorinput = document.getElementById("clr");//get the color input element
	var color = colorinput.value;                   //sets the canvas background color to the input color element
	dd1.style.backgroundColor = color;
}

/////////////////////////////////////////////////////////////////////
Slider Input

html------------
< input type="range"  min="10"  max="100" value="10"
   id="sldr"  oninput="dosquare()">

JS--------------
function dosquare(){
	var dd1 = document.getElementById("d1");
	var sizeinput = document.getElementById("sldr");
	var size = sizeinput.value;
	var ctx = dd1.getContext("2d");
	ctx.clearRect(0,0,dd1.width,dd1.height);
	ctx.fillStyle = "yellow";
	ctx.fillRect(10,10,size,size);
}

=====================================================================
Upload and Display an Image
=====================================================================
text input with button

html----------
<input type="text" id="finput" >
<input type="button" value="Upload" onclick="upload()">

JS------------
function upload(){
	var fileinput = document.getElementById("finput");
	var filename = fileinput.value;
	alert("chose "+ filename);
}

/////////////////////////////////////////////////////////////////////
upload and display and image

html-----------
<input type="file" multiple="false" accept="image/*" id="finput"
onchange="upload()">

JS-------------
function unpload(){
	var imgcanvas = document.getElementById("can");
	var fileinput = document.getElementById("finput");
	var image = new SimpleImage(fileinput);
	image.drawTo(imgcanvas);
}
-----------------------------------------------------------------
import Simpleimage library of duke

html---------
<script type="text/javascript"  src="http://www.dukelearntoprogram.com
    /course1/common/js/cs101/SimpleImage.js">
</script>

===================================================================
Convert image to Grayscale
===================================================================
html--------
<input type="button" value="MakeGrayscale" onclick="makeGray()">
------------------------------------------------------------------
makeGray() Function

function makeGray(){
	for (var pixel of image.values()){
		var avg=(pixel.getRed()+pixel.getGreen()+pixel.getblue())/3;
		pixel.setRed(avg);
		pixel.setGreen(avg);
		pixel.setBlue(avg);
	}
	var imgcanvas = document.getElementById("can");
	image.drawTo(imgcanvas);
}

function upload(){
	[get file input]
	var image = new SimpleImage(fileinput);
	image.drawTo(imgcanvas);
}
=====================================================================
Green Screen web page
=====================================================================
upload two images
	two input buttons
html-----------------
<input type="file" multiple="false" accept="image/*" id="fgfile"
	onchange="loadForegroundImage()" >
<input type="file" multiple="false" accept="image/*" id="bgfile"
	onchange="loadBackGroundImage()" >

JS------------------
var fgImage = null;

function loadForegroundImage(){
	var imgFile = document.getElementById("fgfile");
	fgImage = new SimpleImage(imgFile);		//create new object
	var canvas = document.getElementById("fgcan");
	fgImage.drawTo(canvas);
}
-------------------------------------------------------------------
function greenScreen(){
	if(fgImage == null || !fgImage.complete()){
		alert("foreground not loaded");
		return;
	}
	if(bgImage == null || !bgImage.complete()){
		alert("background not loaded");
	}
	clearCanvas();
	[...]
}
---------------------------------------------------------------------
var output = new SimpleImage(fgImage.getWidth(),fgImage.getHeight());

for(var pixel of fgImage.values()){
	var x= pixel.getX();
	var y= pixel.getY();
	if(pixel.getGreen() > greenThreshold){
		var bgPixel = bgImage.getPixel(x,y);
		output.setPixel(x,y,bgPixel);
	}
	else{
		output.setPixel(x,y,pixel);
	}
}

====================================================================
change background of a photo - in webpage - sample code
===================================================================
html------------------
<script src="https://www.dukelearntoprogram.com/course1/common/js/image/SimpleImage.js" >
</script>

<h1>Green Screen Web Page</h1>

<canvas id = "fgcan">
</canvas>
<canvas id = "bgcan">
</canvas>

<p>
Foreground: <input type="file" multiple="false" accept="image/*" id="fgfile" onchange="loadForegroundImage()" >
</p>

<p>
Background: <input type="file" multiple="false" accept="image/*" id="bgfile" onchange="loadBackgroundImage()" >
</p>

<p>
<input type="button" value="Create Composite" onclick="doGreenScreen()" >
<input type="button" value="Clear Canvases" onclick="clearCanvas()" >
</p>
<br>
<br>

CSS---------------------------
body {
  background-color: wheat;
  font-family: Verdana;
  margin: 40px;
}

canvas {
  border: 1px solid #c3c3c3;
  height: 200px;
}

input {
  font-size: 12pt;
}

JS--------------------------
var fgImage = null;
var bgImage = null;
var fgCanvas;
var bgCanvas;

function loadForegroundImage() {
  var file = document.getElementById("fgfile");
  fgImage = new SimpleImage(file);
  fgCanvas = document.getElementById("fgcan");
  fgImage.drawTo(fgCanvas);
}

function loadBackgroundImage() {
  var file = document.getElementById("bgfile");
  bgImage = new SimpleImage(file);
  bgCanvas = document.getElementById("bgcan");
  bgImage.drawTo(bgCanvas);
}

function createComposite() {
  // this function creates a new image with the dimensions of the foreground image and returns the composite green screen image
  var output = new SimpleImage(fgImage.getWidth(),fgImage.getHeight());
  var greenThreshold = 240;
  for (var pixel of fgImage.values()) {
    var x = pixel.getX();
    var y = pixel.getY();
    if (pixel.getGreen() > greenThreshold) {
      //pixel is green, use background
      var bgPixel = bgImage.getPixel(x,y);
      output.setPixel(x,y,bgPixel);
    }
    else {
      //pixel is not green, use foreground
      output.setPixel(x,y,pixel);
    }
  }
  return output;
}

function doGreenScreen() {
  //check that images are loaded
  if (fgImage == null  || ! fgImage.complete()) {
    alert("Foreground image not loaded");
  }
  if (bgImage == null || ! bgImage.complete()) {
    alert("Background image not loaded");
  }
  // clear canvases
  clearCanvas();
  // call createComposite, which does green screen algorithm and returns a composite image
  var finalImage = createComposite();
  finalImage.drawTo(fgCanvas);
}

function clearCanvas() {
  doClear(fgCanvas);
  doClear(bgCanvas);
}

function doClear(canvas) {
  var context = canvas.getContext("2d");
  context.clearRect(0,0,canvas.width,canvas.height);
}

///////////////////////////////////////////////////////////////////

====================================================================
Steganography
====================================================================

for each pixel
	Red = Math.floor(red/16)*16
	Green = Math.floor(green/16)*16
	Blue = Math.floor(blue/16)*16 

for each pixel
	Red = Math.floor(red/16)
	Green = Math.floor(green/16)
	Blue = Math.floor(blue/16)

--------------------------------------------------------------------
function clearbits(pixval){
	var x = Math.floor(pixval/16)*16;
	return x;
} 
function chop2hide(image){
	for(var px of image.values()){
		px.setRed(clearbits(px.getRed()));
		px.setGreen(clearbits(px.getGreen()));
		px.setBlue(clearbits(px.getBlue()));
	}
	return image;
}
function shift(image){
	for(var px of image.values()){
		px.setRed(px.getRed()/16);
		px.setGreen(px.getGreen()/16);
		px.setBlue(px.getBlue()/16);
	}
}
function combine(show, hide){
	var answer = new SimpleImage(show.getWidth(), show.getHeight());
	for (var px of answer.values()){
		var x = px.getX();
		var y = px.getY();
		var showPixel = show.getPixel(x,y);
		var hidePixel = hide.getPixel(x,y);
		px.setRed(showPixel.getRed() + hidePixel.getRed());
		px.setGreen(showPixel.getGreen() + hidePixel.getGreen());
		px.setBlue(showPixel.getBlue() + hidePixel.getBlue());
	}
	return answer;
}
function crop(image, width, height){
	var retImage = new SimpleImage(width, height);
	for (var px of retImage.values()){
		var x = px.getX();
		var y = px.getY();
		var tempPixel = image.getPixel(x,y);
		retImage.setPixel(x,y,tempPixel);
	}
	return retImage;
}
---------------------------------------------------------------------
var start = new SimpleImage("usain.jpg");
var hide = new SimpleImage("skyline.jpg");

start = chop2hide(start);
hide = shift(hide);
var ans = combine(start,hide);
print(ans);
//print(start);






